<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在 Hyper-V 上运行 OpenWrt</title>
    <link href="/2024/03/08/run-openwrt-on-hyperv/"/>
    <url>/2024/03/08/run-openwrt-on-hyperv/</url>
    
    <content type="html"><![CDATA[<p>这里简单介绍一下如何在 Hyper-V 上安装和配置 OpenWrt，以及将依照这个方法配置的 OpenWrt 作为旁路由接管本机流量的最基本过程。一般来讲，这些步骤在 VMware WorkStation &#x2F; VMware EXSi &#x2F; Proxmox VE &#x2F; 其它 kvm 等虚拟化平台的执行应该是<strong>相通</strong>的。如果你想将 OpenWrt 虚拟机作为一个软路由使用，那么本文应该也会对你有所帮助。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>确保你需要安装 OpenWrt 的电脑支持 Hyper-V 功能，可以跟随稍后的步骤以确认。</li><li>部分操作可能需要访问国际网络，所以可能需要一个霍格沃兹环境(笑)来下载所需的工具。</li></ol><h2 id="第一步：开启-Hyper-V-功能"><a href="#第一步：开启-Hyper-V-功能" class="headerlink" title="第一步：开启 Hyper-V 功能"></a>第一步：开启 Hyper-V 功能</h2><p>Hyper-V 是微软为 Windows 专业版&#x2F;企业版和 Windows Server 系列操作系统所设计的一套虚拟化平台和虚拟机监控程序。其应该可以与较新版本的 VMware Workstation 等桌面端虚拟化平台共存。</p><p>既然是要在 Hyper-V 上运行 OpenWrt，那么首先我们要考虑的问题就有两个：</p><ol><li>我的电脑能不能打开 Hyper-V?</li><li>如何打开 Hyper-V?</li></ol><p>那么，首先我们来确认一下能不能开 Hyper-V 吧。</p><h3 id="确认能否启用-Hyper-V"><a href="#确认能否启用-Hyper-V" class="headerlink" title="确认能否启用 Hyper-V"></a>确认能否启用 Hyper-V</h3><p>确认能否开启 Hyper-V 实际上就是确认系统版本是否符合要求。一般来说，确认系统版本有以下几种方式可用(示例如下)：</p><ol><li>Windows Vista&amp; Windows 7&amp; Windows 8.x: 控制面板 -&gt; 系统与安全 -&gt; 系统 &#x2F; Windows 10: “设置”应用 -&gt; 系统 -&gt; 关于 &#x2F; Windows 11: “设置”应用 -&gt; 系统 -&gt; 系统信息</li></ol><p><img src="https://s2.loli.net/2024/03/03/vX81OxGosVyuU6J.png" alt="Windows 10 关于"><br><img src="https://s2.loli.net/2024/03/03/MwYExlg5ryTqjIA.png" alt="Windows 11 系统信息"></p><ol start="2"><li>Win + R -&gt; winver <div align="center"><img src="https://s2.loli.net/2024/03/03/W5HfskjGpVcNSl7.png" alt="winver 命令输出" width=422px height=372px ></div></li></ol><p>如果你的系统版本为专业版，专业工作站版，企业版，教育版或 Server 版本，那么恭喜你，可以进行下一步了。如果你的系统版本为家庭版，家庭中文版等版本，那么本文可能不适用于你。你可以通过一些方式来升级你的系统版本，或者可以采用别的方式开启 Hyper-V。家庭版等系统开启 Hyper-V 的方式不在本文说明范围之内，请各位自行查阅相关教程。</p><h3 id="启用-Hyper-V"><a href="#启用-Hyper-V" class="headerlink" title="启用 Hyper-V"></a>启用 Hyper-V</h3><p>接下来，我们需要进入控制面板：Win + R -&gt; control -&gt; 程序 -&gt; 启用或关闭 Windows 功能，然后需要勾选如下几项：</p><ol><li>Hyper-V</li><li>Windows 虚拟机监控程序平台</li><li>虚拟机平台</li></ol><p>勾选完成后，你的窗口大致应该是这样的：</p><div align="center"><img src="https://s2.loli.net/2024/03/03/tvqI9srQ1VPK2jY.png" alt="Windows 功能" width=313px height=596px></div><p><strong>只需要保证上述三项勾选即可，不必与铃萤完全一致</strong>。</p><p>勾选完成后，点击“确定”，稍等片刻，安装完成后可以按需选择是否重启。烦请注意：下述第三步操作<strong>必须在启用 Hyper-V 并重启后继续进行</strong>。</p><h2 id="第二步：下载-OpenWrt-硬盘镜像并转换格式"><a href="#第二步：下载-OpenWrt-硬盘镜像并转换格式" class="headerlink" title="第二步：下载 OpenWrt 硬盘镜像并转换格式"></a>第二步：下载 OpenWrt 硬盘镜像并转换格式</h2><h3 id="下载-OpenWrt-镜像"><a href="#下载-OpenWrt-镜像" class="headerlink" title="下载 OpenWrt 镜像"></a>下载 OpenWrt 镜像</h3><p>跟随上一步的步骤，相信各位已经成功启用了 Hyper-V 功能。那么，为了创建一个 OpenWrt 的虚拟机，接下来我们需要获得 OpenWrt 的镜像。</p><p>我们可以通过 <a href="https://download.openwrt.org/" title="OpenWrt 官方下载页面">OpenWrt 官网</a> 来下载最新的稳定版镜像。在选择一个版本后，请务必选择 x86 -&gt; 64 ，然后我们可以发现这里有两个版本的镜像：generic-ext4-x.img 和 generic-squashfs-x.img。<img src="https://s2.loli.net/2024/03/04/OBgyvNskpu1q9dI.png" alt="OpenWrt Release"></p><p>这两个镜像的唯一区别在于根文件系统。ext4 文件系统镜像可以对任何改动都进行持久化存储，而 squashfs 一般情况下对文件系统的改动无法持久化，每次重启都会重置更改，但便于从错误配置中重置。这里推荐使用 generic-squashfs-x.img 作为下一步使用的镜像。</p><p>无论选择何种文件系统的镜像，OpenWrt 都给了我们三个选项。这里请选择 generic-x-combined.img.gz 或者 generic-x-combined-efi.img.gz。前一镜像的引导方式是传统 BIOS 引导，后一镜像则为 UEFI 引导。</p><p>请记住这里你下载镜像的引导方式，因为这将<strong>直接决定接下来要创建的虚拟机的世代类型&#x2F;引导方式</strong>。</p><p>铃萤使用的镜像来自 Github 上 <a href="https://github.com/DHDAXCW">@DHDAXCW</a> 编译的 <a href="https://github.com/DHDAXCW/OpenWRT_x86_x64">OpenWrt_x86_x64</a> 镜像。这个镜像的一大特点就是其预置了一些使用过程中可能需要的插件，可以前往仓库的 <a href="https://github.com/DHDAXCW/OpenWRT_x86_x64/releases">Release</a> 以下载镜像。请注意：通过这种方式获得的镜像<strong>同时支持 BIOS 和 UEFI 两种引导方式</strong>，使用时请按需选择。</p><p>如果通过其他方式获得镜像，请<strong>预先确认其引导方式</strong>。</p><h3 id="转换镜像格式至-vhdx"><a href="#转换镜像格式至-vhdx" class="headerlink" title="转换镜像格式至 .vhdx"></a>转换镜像格式至 .vhdx</h3><p>通过上述办法获得镜像(可能需要解压)之后，我们大概率会得到一个 .img 格式的镜像文件，而 Hyper-V 不能直接识别和使用这个格式的镜像，所以我们需要把 .img 格式转换为 Hyper-V 可以识别的 .vhd 或 .vhdx 格式的镜像文件。</p><p>Windows 平台下，我们有两种转换方式：</p><h4 id="其一：使用-qemu-img"><a href="#其一：使用-qemu-img" class="headerlink" title="其一：使用 qemu-img"></a>其一：使用 qemu-img</h4><p>我们可以在 <a href="https://qemu.weilnetz.de/w64/" title="Qemu for Windows build">Qemu for Windows build</a> 页面下载最新版本或你所需要版本的 qemu 安装器，一般来说，最新版本的 .exe 安装程序应该位于文件页面接近底端的位置。</p><div align="center"><img src="https://s2.loli.net/2024/03/05/GpdJ8xCcAaQqBgH.png" alt="Qemu for Windows build 文件页面" width=539px height=443px></div><p>Qemu 安装程序也可以在本站的 Github Release 下载：<a href="https://github.com/RinLin-NYA/RinLin-NYA.github.io/releases/tag/1">Github Releases</a></p><p>下载完成后，进入安装程序，选择语言后会进入组件选择页面。这里可以按需选择，如果你以后想使用 qemu 进行虚拟，那么保持默认(全部勾选)即可。这里我们只需要它的 qemu-img 工具，所以我们只勾选 Tools 和 DLL Library 两项。</p><div align="center"><img src="https://s2.loli.net/2024/03/05/F6kPVNZRvsCwG2L.png" alt="Qemu for Windows 安装程序" width=556px height=434px></div><p>接下来一路默认，安装完成后即可关闭安装程序。注意：安装程序可能不会默认将其安装目录添加进环境变量中，所以接下来的命令可能需要你自行定位至安装目录运行，或者将其添加进你的环境变量。</p><p>然后我们需要打开终端应用。Windows 10 可以使用 PowerShell，或者使用命令提示符。Windows 11 还可以使用自带的“终端”应用(Windows 10 用户也可以在 Microsoft Store 中下载)。铃萤这里使用的是 <a href="https://github.com/Eugeny/tabby" title="Tabby Terminal on Github">Tabby Terminal</a>，各位可以依据使用习惯自行决定。</p><p>使用 cd 命令定位到你下载镜像的存储位置：</p><p><code>cd your_image_dir/</code> (如果使用命令提示符且镜像位置所在盘符与默认盘符不一致，请先切换盘符)</p><p>然后请执行如下命令：</p><p><code>qemu-img convert -p -f raw -O vhdx your_image.img your_image.vhdx</code></p><div align="center"><img src="https://s2.loli.net/2024/03/06/4amCUtVXf7P5E1O.png" width=605px height=455px alt="qemu-img"/></div><p>由图所示，命令不会输出任何结果，但实际上我们已经完成了转换。</p><h4 id="其二：使用-StarWind-V2V-Converter"><a href="#其二：使用-StarWind-V2V-Converter" class="headerlink" title="其二：使用 StarWind V2V Converter"></a>其二：使用 StarWind V2V Converter</h4><p>StarWind V2V Converter 是一款由 Starwind 出品的商业软件，其通过图形化界面以简化镜像转换流程。对于 PowerShell 等命令行操作不熟悉的用户，建议使用此方式。</p><p>我们可以进入 StarWind 的官网下载，但是其下载需要填写邮箱。这里为了简化下载流程，铃萤将该软件的安装程序上传至了本站的 <a href="https://github.com/RinLin-NYA/RinLin-NYA.github.io/releases/tag/1">Github Releases</a>，可以按需下载。</p><p>下载完成后，进入安装程序，一路默认即可。安装完成后，进入 StarWind V2V Converter，在”Select the location of the img to convert”页面中，选择”Local File”，然后在下一页中选择你下载的镜像，下一步在”Select the location of the destination image”页面选择”Local File”，在”Select destination image format”页面中选择”VHD&#x2F;VHDX”,选择”VHDX Growable Image”或者”VHDX Pre-allocated”，转换即可。</p><div align="center"><img src="https://s2.loli.net/2024/03/06/m69iGzrgJ3ufpFq.png" width=335px height=355px alt="Step 1"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/Ttw7PGWAQbKqUVD.png" width=335px height=355px alt="Step 2"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/XtVrbJD8ZTBk9nF.png" width=335px height=355px alt="Step 3"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/XdzbJ9urImVGNLn.png" width=335px height=355px alt="Step 4"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/iVrOp6aY1ChbIDk.png" width=335px height=355px alt="Step 5"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/H5JXsL9ICfp4gZM.png" width=335px height=355px alt="Step 6"/></div><div align="center"><img src="https://s2.loli.net/2024/03/06/HapJjX2nqzRPmTk.png" width=335px height=355px alt="Step 7"/></div><p>至此，我们已经完成了 OpenWrt 镜像的下载和格式转换。建议将转换后的 .vhdx 镜像更换一个位置。</p><p>现在可以着手配置 Hyper-V 虚拟机了。</p><h2 id="第三步：创建并配置-Hyper-V-虚拟机"><a href="#第三步：创建并配置-Hyper-V-虚拟机" class="headerlink" title="第三步：创建并配置 Hyper-V 虚拟机"></a>第三步：创建并配置 Hyper-V 虚拟机</h2><p>通过前边的两步，我们已经完成了所有的先期准备工作：开启 Hyper-V 和准备 OpenWrt 硬盘镜像文件。接下来，我们将正式进入创建 Hyper-V 虚拟机的流程。</p><h3 id="配置虚拟网络交换机"><a href="#配置虚拟网络交换机" class="headerlink" title="配置虚拟网络交换机"></a>配置虚拟网络交换机</h3><p>创建虚拟网络适配器前，我们首先需要了解一下 Hyper-V 提供了哪些类型的交换机。</p><h4 id="了解虚拟网络交换机类型"><a href="#了解虚拟网络交换机类型" class="headerlink" title="了解虚拟网络交换机类型"></a>了解虚拟网络交换机类型</h4><p>Hyper-V 一共提供了三种类型的虚拟网络交换机：</p><ol><li>内部虚拟交换机：供<strong>虚拟机和物理机之间通讯</strong>的虚拟网络交换机。这种虚拟交换机可用于物理机和虚拟机的双向连接(例如，如果你希望从物理机连接到虚拟机的 ssh 或者远程桌面，那么这种虚拟交换机将很有用)。请注意：这种虚拟交换机<strong>通常情况</strong>下<strong>不可用于让虚拟机联网</strong>。</li><li>外部虚拟交换机：将物理机的网卡<strong>直接供虚拟机使用</strong>的虚拟网络交换机。这种虚拟交换机可以直接为虚拟机提供网络连接。这种虚拟交换机的作用相当于为一台物理机装载一张物理网卡。</li><li>专用虚拟交换机：供某一物理机上的所有<strong>虚拟机之间相互通讯</strong>的虚拟网络交换机。这种虚拟交换机<strong>只能用于各个虚拟机之间的通讯，无法同物理机或外部网络通讯</strong>。</li></ol><p>由于本文配置 OpenWrt 的目的是“将其配置为旁路由以接管本机流量”,所以我们要设置的虚拟交换机会包含一个内部虚拟交换机(用于将物理机的流量传输至 OpenWrt 虚拟机，并实现对 OpenWrt 的控制)和一个外部虚拟交换机(用于为 OpenWrt 虚拟机提供外部网络连接)。如果你配置 OpenWrt 的目的是将其作为与下游网络设备直接连接的软路由，请创建两个外部虚拟交换机。</p><h4 id="创建虚拟网络交换机"><a href="#创建虚拟网络交换机" class="headerlink" title="创建虚拟网络交换机"></a>创建虚拟网络交换机</h4><p>我们打开“Hyper-V 管理器”，选择“连接到服务器”，选择“本地计算机”以连接到物理机。然后，请打开“虚拟交换机管理器”。</p><p><img src="https://s2.loli.net/2024/03/07/n1JBpCDWkH96AXf.png" alt="Hyper-V 管理器"></p><p>打开“虚拟交换机管理器”，我们需要创建两个虚拟网络交换机，名称可以任取。其中一个应该为<strong>外部虚拟交换机</strong>，另一个则应该为<strong>内部虚拟交换机</strong>。</p><p>创建内部虚拟交换机时，所有设置保持默认即可。创建外部虚拟交换机时，请注意：外部虚拟交换机所绑定的物理网卡<strong>应为你物理机联网时使用的物理网卡</strong>。</p><div align="center"><img src="https://s2.loli.net/2024/03/07/XJhMTn6xKuRmNLf.png" width=538px height=512px alt="内部虚拟交换机" /></div><div align="center"><img src="https://s2.loli.net/2024/03/07/iBU2xrQf7lDH6oq.png" width=538px height=512px alt="外部虚拟交换机" /></div><p>上方蓝框位置即为要更改的选项。铃萤的联网方式是 WLAN，所以我将外部虚拟交换机绑定了我的无线网卡。各位需要<strong>依据自己联网的情况选择绑定网卡</strong>。</p><p>确认配置无误后，点击“应用”，等待创建完成后，本步就完成了。我们已经有了两个可用的虚拟网络交换机，可以开始正式进入创建虚拟机流程了。</p><h3 id="创建-Hyper-V-虚拟机"><a href="#创建-Hyper-V-虚拟机" class="headerlink" title="创建 Hyper-V 虚拟机"></a>创建 Hyper-V 虚拟机</h3><p>回到 Hyper-V 管理器，点击“新建” -&gt; 虚拟机，进入新建虚拟机向导。</p><p><img src="https://s2.loli.net/2024/03/07/ef5c7XVZPuMAhqO.png" alt="新建虚拟机向导"></p><p>点击“下一步”，名称和位置任取即可，在下一步的“指定代数”中，请依据你先前获得镜像的引导方式选择虚拟机世代类型。如果你的镜像仅支持 BIOS 引导方式，请选择红框所示的“第一代”，如果你的镜像支持 UEFI 引导方式，则可以任意选择世代类型，但是这里仍推荐选择蓝框所示的“第二代”。</p><p><img src="https://s2.loli.net/2024/03/07/ZigwmYPjlIkDRde.png" alt="指定代数"></p><p>铃萤的镜像支持 UEFI 引导方式，所以我选择以“第二代”作为我虚拟机的世代类型。</p><p>内存分配建议不少于 1024 Mb，铃萤这里为其分配了 1536 Mb，建议关闭勾选“为此虚拟机使用动态内存”</p><p>“配置网络”页面中，我们只能选择其中一个网络适配器。这里建议优先选择我们的内部虚拟交换机。</p><p>“连接虚拟硬盘”页面中，我们选择蓝框所示“使用现有虚拟硬盘”，找到我们先前转换好的 .vhdx 虚拟硬盘文件，选择它。</p><p><img src="https://s2.loli.net/2024/03/07/5YiKxr9m6dc8qnk.png" alt="连接虚拟硬盘"></p><p>以上所有步骤完成后，可以进入“摘要”，确认信息无误后，点击“完成”，等待虚拟机创建完成。</p><p>创建完成后，回到“Hyper-V 管理器”，找到我们刚才创建的虚拟机，在右键后的下拉菜单中进入“设置”。进入“设置”后，选择“添加硬件”，类型选择网络适配器，再将我们之前配置的外部虚拟交换机添加进虚拟机中。</p><p>回到我们刚刚分配的外部虚拟交换机，点开“+”号，进入高级功能，勾选“启用 MAC 地址欺骗”，应用设置即可。</p><p><img src="https://s2.loli.net/2024/03/07/KSVq6reRhbyiH9W.png" alt="网络适配器 高级功能"></p><p>然后我们进入左侧的“安全”页面，取消勾选“启用安全启动”，然后应用，否则 Hyper-V 会拒绝引导 OpenWrt。</p><p>到这里，我们已经完成了对这一 Hyper-V 虚拟机在初次开机之前的全部配置。</p><h2 id="第四步：配置-OpenWrt-虚拟机"><a href="#第四步：配置-OpenWrt-虚拟机" class="headerlink" title="第四步：配置 OpenWrt 虚拟机"></a>第四步：配置 OpenWrt 虚拟机</h2><p>经过前边的几个步骤，我们已经完成了开启虚拟机前的所有前置步骤，接下来我们就可以正式启动虚拟机，进入 OpenWrt 的世界了。</p><p>打开虚拟机之前，我们需要打开终端，执行命令：<code>ipconfig</code> 查看网卡信息。请找到你当前联网网卡的 IP 地址。</p><p>由于我们已经将联网网卡分配到了外部虚拟交换机上，所以我们也可以查看外部虚拟交换机的信息以获得 IP 地址。</p><p><img src="https://s2.loli.net/2024/03/07/quLdHUCafMbGN6c.png" alt="ipconfig"></p><p>可以看到，我们外部虚拟交换机的 IP 地址是 192.168.31.61，那么我们可以推知当前网络的网段为192.168.31.*。请记住各位通过这种方式获得的网段，我们接下来的配置将会用到这一网段。同时也请记住这里的默认网关。</p><h3 id="虚拟机中的配置"><a href="#虚拟机中的配置" class="headerlink" title="虚拟机中的配置"></a>虚拟机中的配置</h3><p>进入“Hyper-V 管理器”，选择我们刚才配置完毕的虚拟机，点击“连接”以启动虚拟机连接程序。点击“启动”就可以开机了。</p><div align="center"><img src="https://s2.loli.net/2024/03/07/Zi46nFVlxAmJbYH.png" alt="虚拟机连接程序" width=478px height=368px/></div><p>启动开始后请稍等约 30 秒时间，时间到后我们可以按下 Enter 键进入内置 tty 终端。</p><p>进入 tty 终端后，输入命令：<code>vim /etc/config/network</code>，然后我们就可以看到我们的网卡已经被分配了设备名称和 IP 地址。</p><p><img src="https://s2.loli.net/2024/03/07/qGdB1cVws54fNtj.png" alt="vim /etc/config/network"></p><p>我们要改动的部分，是蓝框中的红框部分，即 lan 网口的静态 IP 地址。按下”i”键进入 vim 的编辑模式，然后定位到红框位置，即行<code>option ipaddr &#39;192.168.11.1&#39;</code>处，将这个 IP 地址更改为任意一个内网 IP 地址，这里我们使用 <code>192.168.35.1</code>。</p><p>更改后的效果应该如下图所示：</p><p><img src="https://s2.loli.net/2024/03/07/1UblfNXpjh79AIS.png" alt="更改配置后的效果"></p><p>然后，按下 esc 键，键入<code>:wq</code>以退出 vim。为了应用设置，我们需要在终端执行以下命令：</p><p><code>service network reload</code></p><p>命令执行完成后，我们的新网络配置应该已经生效了。此时我们可以前往浏览器访问刚才设置好的静态 IP 地址，确认能否进入 OpenWrt 的后台管理页面。如果能够进入，那么我们的配置就已经完成。否则，可能需要检查网络配置是否正确，以及网段是否与物理网卡网段一致。</p><h3 id="浏览器中的配置"><a href="#浏览器中的配置" class="headerlink" title="浏览器中的配置"></a>浏览器中的配置</h3><p>打开浏览器，在地址栏输入我们刚才配置的静态 IP 地址以进入 OpenWrt 的后台管理页面。默认用户名为 root ，密码默认为 password。建议在配置完成后更改 root 的密码。</p><p>如果没有问题，成功登录后，OpenWrt 应该会默认展示当前虚拟机的状态。</p><p><img src="https://s2.loli.net/2024/03/07/1jm9YwefPGZtQ28.png" alt="OpenWrt 状态"></p><p>接下来我们需要进入“网络” -&gt; 接口，对现有的 wan 口进行配置。以下的配置，如果我们只需要联网即可，那么 wan 口的设置可以保持默认。如果我们希望为 OpenWrt 虚拟机赋予一个静态 IP 地址，那么我们需要更改的配置如下：</p><ol><li>切换协议类型为“静态地址”。</li><li>新增 IPv4 地址。我们可以为 OpenWrt 分配一个静态 IP 地址。这里铃萤设置为<code>192.168.31.70</code></li><li>新增 IPv4 网关。网关地址应该和主机物理网卡的默认网关一致，主机的默认网关可以参照本章节最开始的部分获得。铃萤的网关地址为 <code>192.168.31.229</code>，所以这里我填入此项。</li><li>新增 IPv4 广播地址。广播地址一般是当前网络网段的 .255 位。这里铃萤的广播地址设置为 <code>192.168.31.255</code>。</li><li>设置自定义 DNS 服务器：此项可以让 OpenWrt 使用独立的 DNS 服务器配置。也可以不设置。这里推荐设置为主服务器地址<code>8.8.8.8</code>，副服务器地址<code>8.8.4.4</code> (Google Public DNS Server)。</li><li>设置子网掩码为<code>255.255.255.0</code>。</li><li>勾选 DHCP 设置的“忽略此接口”选项。</li></ol><p>对应到我们要在网页上修改的项目，应该是如下蓝框所示：</p><p><img src="https://s2.loli.net/2024/03/08/MiHzsC6S2ANjb5q.png" alt="OpenWrt wan 口配置"></p><p>上述七项完成后，我们点击“保存&amp;应用”，新的网口配置就会被立即应用。</p><p>此时，如果一切正常，那么你的电脑应该可以上网了，且流量应该正常的经过 OpenWrt 而非直接发出。到这里，恭喜各位已经完成了在通常情况下对 OpenWrt 的配置。</p><h2 id="配置-OpenWrt-虚拟机的另一种方式"><a href="#配置-OpenWrt-虚拟机的另一种方式" class="headerlink" title="配置 OpenWrt 虚拟机的另一种方式"></a>配置 OpenWrt 虚拟机的另一种方式</h2><p>接下来，铃萤需要讲一下非通常情况下的配置。</p><p>例如：如果我们使用的是 WLAN 连接，那么我们的 IP 地址可能会经常变化，这时候我们把先前配置好的 wan 网口协议类型转换回 DHCP 客户端协议一般会解决问题。</p><p>但是，如果我们的网络环境需要进行认证呢？例如铃萤所在学校的校园网等要求对每一个联网设备进行网络认证才能访问网络的网络环境，这时候我们按照如上方式配置，会发现我们无法连接到网络。这时候我们需要对已有的配置进行一些修改。</p><p>修改后的配置不仅可以应对需要认证的网络环境，还可以实现在 IP 地址和网段不断变化的网络环境中只需在预先配置时修改一次配置的稳定连接。</p><p>下面我们将会对这一配置方式进行说明。这一配置方式大致可以分为以下步骤：</p><ol><li>启用 Windows ICS 服务</li><li>创建并使用新的虚拟网络交换机</li><li>设置网络共享</li><li>前往 OpenWrt 后台页面修改网口配置</li></ol><p>进行下述步骤之前，请先将已创建的 OpenWrt 虚拟机关机。</p><h3 id="启用-Windows-ICS-服务"><a href="#启用-Windows-ICS-服务" class="headerlink" title="启用 Windows ICS 服务"></a>启用 Windows ICS 服务</h3><p>在启用 ICS 服务之前，我们需要先了解一下什么是 Windows Internet Connection Sharing(ICS) 服务。</p><h4 id="什么是-Windows-Connection-Sharing-ICS-服务"><a href="#什么是-Windows-Connection-Sharing-ICS-服务" class="headerlink" title="什么是 Windows Connection Sharing(ICS) 服务"></a>什么是 Windows Connection Sharing(ICS) 服务</h4><p>Windows Internet Connection Sharing(ICS) 服务是 Windows 内置的网络共享服务，其官方描述是“为家庭和小型办公网络提供网络地址转换、寻址、名称解析和&#x2F;或入侵保护服务”，其作用是将一个网络适配器的网络连接共享给另外一个网络适配器，以实现两个适配器同时连接网络。</p><p>之前介绍内部虚拟网络交换机的时候我曾经说过：</p><div class="note note-info">            <p>这种虚拟交换机<strong>通常情况</strong>下<strong>不可用于让虚拟机联网</strong>。</p>          </div><p>但是，如果我们开启了 ICS 服务，我们就可以赋予先前无法连接外部网络的内部虚拟交换机联网的能力。我们要进行的配置，就依赖于这项服务。</p><p>请注意：Windows ICS 服务将运行在本机的 <code>192.168.137.*</code> 网段上。<strong>请记住这一网段</strong>。如果你先前已经为已有的内部虚拟交换机设置为了这一网段，为了后续配置，这里有两种解决方式：</p><ol><li>将这个内部虚拟交换机作为稍后网络共享的目标网络适配器，然后新建一个内部虚拟交换机，将新建的内部虚拟交换机注册到 OpenWrt 虚拟机中。按照下述步骤执行完毕后，OpenWrt 开机会按照新的网卡顺序重新注册网卡，此时如无意外你的原有内部虚拟交换机会被注册为 eth0，新的内部虚拟交换机会被注册为 eth1。此时你需要将 wan 口绑定到 eth0，将 lan 口绑定到 eth1，然后继续配置。如果更改配置前 wan 口和 lan 口对应的内部虚拟交换机已被正确绑定，那么直接继续配置即可。</li><li>启动 OpenWrt 虚拟机，在开机后进入后台管理页面，更改 lan 口配置，修改配置的内网 IP 地址为除了 <code>192.168.137.*</code> 网段以外的内网 IP 地址。</li></ol><h4 id="启用-Windows-ICS-服务-1"><a href="#启用-Windows-ICS-服务-1" class="headerlink" title="启用 Windows ICS 服务"></a>启用 Windows ICS 服务</h4><p>首先，我们需要按下“Win” + “R”键打开“运行”窗口，输入 services.msc，打开 Windows 控制台的服务管理页面。</p><div align="center"><img src="https://s2.loli.net/2024/03/08/VtsX19lzwqWk4Sr.png" alt="运行" width=324px height=163px/></div><p>然后，我们需要滚动鼠标滚轮或上下滑动触控板，在服务列表里找到 Internet Connection Sharing(ICS)，右键或双击它，进入属性。</p><p><img src="https://s2.loli.net/2024/03/08/475awFJL8Pv1EUQ.png" alt="服务 -&gt; Internet Connection Sharing(ICS)"></p><p>我们需要将其的启动类型设置为“自动”，并且需要立刻启动这项服务。也就是下图所示蓝框的两处：</p><div align="center"><img src="https://s2.loli.net/2024/03/08/tULcOHD5MqFXNPh.png" alt="服务属性" width=354px height=404.5px/></div><p>至此，服务配置完成。我们可以开始创建新的虚拟网络交换机了。</p><h3 id="创建并使用新的虚拟网络交换机"><a href="#创建并使用新的虚拟网络交换机" class="headerlink" title="创建并使用新的虚拟网络交换机"></a>创建并使用新的虚拟网络交换机</h3><p>创建虚拟网络交换机的步骤与本文第三步第一部分第二节的步骤<strong>完全一致</strong>，名称任取即可。请注意：我们这里需要创建的虚拟网络交换机是<strong>内部虚拟交换机</strong>，并且这里建议在创建这一内部虚拟交换机之前<strong>删除或禁用已有的任何外部虚拟交换机</strong>。删除虚拟交换机的步骤：进入虚拟交换机管理器，选择要删除的虚拟交换机，点击“移除”后应用即可。</p><p>回到我们的 Hyper-V 管理器，找到我们配置的 OpenWrt 虚拟机，进入其属性页面，将我们在第三步第二部分中添加的外部虚拟交换机更改为我们创建的第二个内部虚拟交换机，应用即可。这里我的内部虚拟交换机命名为了“vlan_wan_ics”，所以最后效果应该如下图所示，蓝框部分应该发生了变化：</p><p><img src="https://s2.loli.net/2024/03/08/VR5kLnWXoQAszYI.png" alt="第二个内部虚拟交换机"></p><p>到这里，我们就可以进入下一步：设置网络共享了。</p><h3 id="设置网络共享"><a href="#设置网络共享" class="headerlink" title="设置网络共享"></a>设置网络共享</h3><p>在设置网络共享之前，我们<strong>必须确保先前设置的 ICS 服务已被启用且当前正在运行</strong>。</p><p>确认服务运行的步骤与本章第一部分第二节设置服务状态前的步骤完全一致，只需要查看状态是否为“正在运行”即可。如果未在运行，则请继续按照本章第一部分第二节的步骤继续执行。</p><p>确认服务正在运行之后，我们需要打开控制面板。Windows 11 的控制面板打开方式比较繁琐，需要按下“Win” + “R”键打开“运行”窗口，输入 control 才能打开控制面板。Windows 10 及以下版本的用户可以直接在开始菜单寻找。打开控制面板后，我们需要依次点击“网络和 Internet” -&gt; “网络与共享中心” -&gt; “更改适配器设置”以进入适配器设置界面。</p><p><img src="https://s2.loli.net/2024/03/08/ClIAvJ6xBZXkmuD.png" alt="网络适配器页面"></p><p>进入适配器设置界面后，我们需要右键当前联网的物理网卡，右键进入适配器属性。上图中标蓝框的是铃萤的联网网卡，各位配置时需要选择自己的联网网卡。</p><p>右键进入属性后，我们进入“共享”选项卡，勾选“允许其他网络用户通过此计算机的 Internet 连接来连接”选项，在下拉框中找到我们在本章第二部分创建的内部虚拟交换机并选中。下方的“允许其他网络用户控制或禁用共享的 Internet 连接”选项不要勾选。设置完成后的页面应该如下图所示(这里铃萤的内部虚拟交换机名称为 vlan_wan_ics)：</p><div align="center"><img src="https://s2.loli.net/2024/03/08/W683FD4R5fEOMLQ.png" alt="网络适配器属性 - 共享" width=354px height=500px/></div><p>应用，然后退出即可。</p><p>此步完成后，我们就可以去配置 OpenWrt 虚拟机了。</p><h3 id="前往-OpenWrt-后台页面修改网口配置"><a href="#前往-OpenWrt-后台页面修改网口配置" class="headerlink" title="前往 OpenWrt 后台页面修改网口配置"></a>前往 OpenWrt 后台页面修改网口配置</h3><p>回到 Hyper-V 管理器，找到我们创建的 OpenWrt 虚拟机，将其开机。稍等片刻后，进入浏览器，访问我们先前设置好的内网 IP 地址(正常情况下此项不应发生变化)，输入用户账户密码，进入 OpenWrt 的后台管理页面。此步骤与本文第四步第二部分保持一致，但是对 wan 口的更改必须严格按照以下步骤进行：</p><ol><li>切换协议类型为“静态地址”。</li><li>新增 IPv4 地址。由于我们已经知道 ICS 服务运行的网段位于 <code>192.168.137.*</code> 网段上，所以我们指定的网络地址必须是在这一网段上除了 <code>192.168.137.1</code> 以外的内网地址。这里铃萤设置为 <code>192.168.137.2</code>，各位可以在这一网段范围内任意设置。</li><li>新增 IPv4 网关。网关地址必须设置为 <code>192.168.137.1</code>，这是 ICS 服务的预留地址。</li><li>新增 IPv4 广播地址。广播地址这里需要设置为 <code>192.168.137.255</code>。</li><li>设置自定义 DNS 服务器：此项可以让 OpenWrt 使用独立的 DNS 服务器配置。也可以不设置。这里推荐设置为主服务器地址 <code>8.8.8.8</code>，副服务器地址 <code>8.8.4.4</code> (Google Public DNS Server)。</li><li>设置子网掩码为 <code>255.255.255.0</code>。</li><li>勾选 DHCP 设置的“忽略此接口”选项。</li></ol><p>配置完成以后，如果没有差错，最终体现在网页上的配置应该如下图所示，蓝框表示我们需要修改的配置项：</p><p><img src="https://s2.loli.net/2024/03/08/NDnZXE54chtQRjK.png" alt="wan 网口配置"></p><p>上述七项完成后，我们点击“保存&amp;应用”，新的网口配置就会被立即应用。</p><p>此时，如果一切正常，那么你的电脑应该可以上网了，且流量应该正常的经过 OpenWrt 而非直接发出。</p><p>到这里，请允许铃萤再次恭喜各位完成了另一种 OpenWrt 虚拟机的配置。在此配置下，我们不仅可以应对需要认证的网络环境，还可以实现在 IP 地址和网段不断变化的网络环境中只需修改一次配置的稳定连接。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>那么到这里，我们就已经完成了从开启 Hyper-V，到准备 OpenWrt 硬盘镜像，创建和配置虚拟机，再到配置 OpenWrt 的全部过程啦！</p><p>从搭建 blog 网页到铃萤编写这篇文章，这一过程一共花费了铃萤五天的时间，虽然时常会感觉到累，但是看到 blog 最终成型的那一刻，我觉得：我做的这一切都是值得的。</p><p>接下来，我将会发布以下主题的几篇文章，虽然下一次发布可能不知道是什么时候了（</p><ol><li><del>介绍铃萤自己</del>(已完结)</li><li>介绍铃萤搭建 blog 的过程</li><li>介绍 OpenWrt 虚拟机的一些进阶用法</li></ol><p>以上就是这篇文章的全部内容啦~</p><p>祝各位食用愉快~</p>]]></content>
    
    
    <categories>
      
      <category>Original</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hyper-V</tag>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>这里是铃萤-RinLin，是一只十九岁大一在读大猫猫哦~</p><p>这里是关于铃萤-RinLin的简要介绍，铃萤计划在未来的某一篇写一篇更加详细的介绍。</p><p>首页 Slogan 由 <a href="https://twitter.com/Neko_Naho">枫铃七星 NahoNeko</a> 受托设计并由 铃萤-RinLin 使用。</p><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>过期了很长时间的 JK。时常怀念当时作为 JK 的时光，即使已经回不去了。</p><p>是一只涉猎非常广泛，深究起来其实什么都做不好的 baka。</p><h3 id="名字的由来"><a href="#名字的由来" class="headerlink" title="名字的由来"></a>名字的由来</h3><h4 id="最开始的情况"><a href="#最开始的情况" class="headerlink" title="最开始的情况"></a>最开始的情况</h4><p>说到铃萤名字的流变过程，其实并不复杂。</p><p>铃萤现在使用的 QQ 是在 2012 年 3 月 8 日注册的，当时是咱妈在使用。直到 2012 年 6 月 9 日，铃萤才正式从咱妈那里接过这个 QQ，也直到这时候，铃萤的网上冲浪才正式拉开序幕。</p><p>当时铃萤 QQ 上的名字是“521”，没错，就是各位看到以后第一个想到的意思。但是当时的铃萤也确实很懒，并没有去更换它，这一时间，铃萤在其它平台上的名字也非常混乱，并没有任何的统一方案。</p><p>不过在这种混乱中，铃萤也有两个相对稳定的名字，虽然它们并未被大规模使用：“樱の世界” 和 “DLZ丿樱”，其中前一个名字受 MineCraft 这款游戏的影响，另一个则是 2017 年 4 月 28 日铃萤当时使用的手机丢失以后的名字，目标是取代前一个名字。</p><p>这种既混乱又有序的情况一直持续到了 2017 年 10 月 8 日。</p><h4 id="第一个正式的名字：Sun-Sizin-Sun思晴"><a href="#第一个正式的名字：Sun-Sizin-Sun思晴" class="headerlink" title="第一个正式的名字：Sun_Sizin-Sun思晴"></a>第一个正式的名字：Sun_Sizin-Sun思晴</h4><p>那时候是 2017 年十月国庆假期的最后一天，在当时铃萤进行的一轮狼人杀对局中，对于铃萤当时的名字，很多人反馈他们因为其背后的意思根本无法直述出来。由于先前在其它平台也接到过类似吐槽，因此铃萤开始构思正式使用的名字以代替当时的名字。</p><p>构思过程共计使用了一小时时间。整个构思并非由铃萤一人完成，而是同铃萤最初的一些好友们共同进行的，先后想出了十余个名字，但没有一个能让铃萤感觉适合用于起名。直到铃萤在九宫格中输入了“747464”，将对应的结果和好友们讨论的时候，所有人都一致认为这个名字非常适合铃萤。</p><p>于是，铃萤在线上使用的第一个双音节名字：“思晴”，就正式出现了。10 月 24 日，加以完善后的名字“思晴Sunshine”被正式投入大规模应用。</p><p>2017 年 12 月 4 日，铃萤尝试将其应用于某游戏上时，却出现了字符长度问题，这促使铃萤对这个名字再次进行更改。在和好友们讨论了更改方案后，最终铃萤决定将“Sunshine”前置并缩写为“Sun”，于是，铃萤真正意义上的第一个名字：“Sun思晴”，在这时才真正出现。</p><p>2021 年 7 月 28 日，在稳定使用三年零九个月之后，新的问题又出现了：没有可以用于外语平台上的通用英文名字。在与 <a href="https://space.bilibili.com/34550486">Xanderminum</a> 讨论后，铃萤选择了将汉字部分先写出片假读音，再转写为罗马字的方案。直到这时，第一个正式使用的英文名“SunSizin”和完全体“Sun_Sizin-Sun思晴”才终于形成。</p><p>这个名字一直被使用到 2022 年 3 月 1 日。</p><h4 id="现在使用的名字：铃萤-RinLin"><a href="#现在使用的名字：铃萤-RinLin" class="headerlink" title="现在使用的名字：铃萤-RinLin"></a>现在使用的名字：铃萤-RinLin</h4><p>如你所见，现在我的名字是铃萤-RinLin。</p><p>这个名字是 2022 年 3 月 1 日才开始正式使用的，这个名字并没有存在太久，满打满算也就只存在了两年多而已。至于为什么最终会选择”铃萤”作为最后的名字，其实是这样的：</p><p>在上一个名字使用接近五年之际，因为一些原因铃萤选择更改名字，最后还是选择以一个双音节词作为名字，最终铃萤选择了四个字作为候选字：</p><div class="note note-info">            <p>零 &#x2F; 铃 &#x2F; 莹 &#x2F; 萤</p>          </div><p>于是就有了下面这四个双音节词作为候选词：</p><div class="note note-info">            <p>零萤 &#x2F; 铃萤 &#x2F; 零莹 &#x2F; 零萤</p>          </div><p>在 <a href="https://twitter.com/Neko_Naho">枫铃七星 NahoNeko</a> 的建议下，我最终使用了“铃萤”作为新的名字。</p><p>英文部分来源于对“铃萤”的日语罗马字转写。这一部分目前有两个方案：</p><ol><li>针对所有单字以日语的汉字训读和音读混合转写为罗马字：Rin Hotaru</li><li>针对所有单字全部以日语汉字音读转写为罗马字：Rin Lin</li></ol><p>目前铃萤的英文名使用第二种方案，在英文平台上，通常会二者混用。</p><h3 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h3><p>铃萤的兴趣非常广泛，因此涉猎也非常广泛。</p><p>最核心的兴趣应该还是计算机，基于这个兴趣，铃萤曾经想过在高考志愿时填报计算机方向的专业，不过因为本人的高考科目是文史类而最终作罢。现在在自学 Python，不过因为种种原因暂时鸽掉了，现在正在尝试重学。</p><p>至于别的兴趣……或许可以算上一个摄影，但是铃萤的摄影技术非常糟糕，比业余水平还要业余，又菜又爱玩了属于是(</p><p>还有一个兴趣(应该算不上兴趣)是历史。正是因为铃萤对历史的相对热爱才将铃萤引入了高中三年的文史类学习中(现在就是后悔，非常后悔.png)</p><p>再然后就是铃萤的又一重要兴趣了：游戏。铃萤的游戏风格也很多样，包括但不限于：沙盒类，开放世界类，MOBA类，FPS类，RPG类，卡牌类，音乐类……等等等等。</p><p>再就是随时听一听日系纯音和各类 VOCALOID&#x2F;东方&#x2F;动漫歌曲，这也算是一种兴趣吧(</p><p>至于别的兴趣，因为铃萤基本上都是一时兴起，所以也就不在此一一列举了。上边列举的都是至少延续了至少五年的兴趣。</p><h3 id="都玩一些什么游戏"><a href="#都玩一些什么游戏" class="headerlink" title="都玩一些什么游戏"></a>都玩一些什么游戏</h3><p>MineCraft：早期是 PE 破解验证版，自 2020 年 9 月 24 日开始逐步入正。</p><p>Call of Duty Mobile：国服开服玩家，现在主要活跃在 Garena 港澳台服。</p><p>暗区突围：类塔科夫游戏，2023 年 2 月 6 日注册。</p><p>Sid Meier’s Civilization VI：受同学推荐入库。</p><p>Phigros：入坑的第一款音游，从此踏上了成为音游人的不归路。</p><p>Rizline：鸽游的第二款力作，非常优秀的商业音游作品。</p><p>MuseDash：入坑的第一款商业音游，同时入了计划通。</p><p>Orzmic：以矿游闻名的音乐游戏。</p><p>maimai DX：入坑的第一款街机音游，由此开始了铃萤的出勤之路。</p><p>还有很多游戏没有再次列入，主要是铃萤想不起来了(</p><h3 id="下一步要做什么"><a href="#下一步要做什么" class="headerlink" title="下一步要做什么"></a>下一步要做什么</h3><p>首先当然还是把已经鸽掉的 Python 学习捡起来吧(，学完 Python 之后下一步想直接从 C 系继续。</p><p>然后想进一步提升音游力，争取早日成为大家口中的椰叶(</p><p>再然后应该是尽力完成现在的大学学业，争取平稳地拿到毕业证书和学位证书，</p><p>然后铃萤还会继续折腾，接着把折腾的成果写到咱的这个 Blog 里。</p><p>总之铃萤下一步要做的事情很多很多。</p><h3 id="更久远的愿景"><a href="#更久远的愿景" class="headerlink" title="更久远的愿景"></a>更久远的愿景</h3><p>想去见一见铃萤珍视的人，想去一些铃萤想去的地方。</p><p>想陪着一路陪着铃萤走来的，铃萤非常珍视的人，和他们缔结永久的友谊。</p><p>想永远和铃萤最亲爱的两位姐姐在一起，永远都不分开。</p><h3 id="如何联系"><a href="#如何联系" class="headerlink" title="如何联系"></a>如何联系</h3><p>通用的社交平台账号应该可以在上边的卡片找到。快速链接会不定期更新。</p><p>邮箱联系可以发送至：<a href="mailto:&#x6d;&#x61;&#x67;&#x69;&#x73;&#107;&#109;&#x6f;&#x64;&#x75;&#108;&#101;&#115;&#x40;&#x6f;&#x75;&#116;&#108;&#111;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;">&#x6d;&#x61;&#x67;&#x69;&#x73;&#107;&#109;&#x6f;&#x64;&#x75;&#108;&#101;&#115;&#x40;&#x6f;&#x75;&#116;&#108;&#111;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;</a></p><p>铃萤的 QQ 是：2426366341 (可能会有验证问题，验证问题的答案请自行搜寻，铃萤相信各位一定可以找到的)</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>全站版权声明</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>本文为 <a href="https://rinlin-nya.github.io/">铃萤-RinLin’s Hexo&amp;GithubPages Blog</a> 的全站版权声明。使用本站文章前，请先阅读本声明。</p><h3 id="第一节：版权声明"><a href="#第一节：版权声明" class="headerlink" title="第一节：版权声明"></a>第一节：版权声明</h3><p>本站的文章分为以下几部分：</p><ol><li>由 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 所编写的原创性文章</li><li>由 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 于外站获得原作者授权或依据外站版权许可合规转载的文章</li><li>由其他作者编写并授权 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 在本站发表的文章</li></ol><p>对于第一部分的文章：Copyleft 2024 ~ Anytime <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a>.</p><p>对于第二和第三部分的文章：所有文章的著作权由其原作者所有。</p><h3 id="第二节：授权使用"><a href="#第二节：授权使用" class="headerlink" title="第二节：授权使用"></a>第二节：授权使用</h3><h4 id="对于上述第一部分的文章，现有以下授权声明可用："><a href="#对于上述第一部分的文章，现有以下授权声明可用：" class="headerlink" title="对于上述第一部分的文章，现有以下授权声明可用："></a>对于上述第一部分的文章，现有以下授权声明可用：</h4><p>除非另有说明，否则本站所有由 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 所著的文章默认依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 授权给任意希望使用上述文章的使用者。</p><p>使用者通常需遵守下列要求：</p><ol><li>使用者须在显著位置声明本文章引用自本站，并添加本站对应文章的链接。</li><li>如果使用者希望改编本文章，则须对改编后的文章同样使用 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 作为许可。</li><li>使用者不得阻止其下游使用者依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 行使他们对本文章所天然享有的权利。</li><li>如果使用者未能遵守以上三项要求，且 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 发信通知使用者 15 个工作日后仍未补正的，则 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 有权撤销对此使用者的许可。撤销声明会在本页面中公开展示。</li></ol><p>对 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 亦即本文原创作者的额外要求：</p><ol><li>不得阻止任何使用者依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 行使他们对本文章所天然享有的权利。</li><li>不得将已依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 授权的文章更改为任何会使文章不符合“自由文化作品”定义的任何许可。</li><li>如果 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 违反了上述规定，则其立即失去对原文章的所有权利，同时本文章将自动依据 <a href="https://creativecommons.org/publicdomain/zero/1.0/">知识共享许可协议：公有领域</a> 贡献至公有领域。</li><li>对于依据上述第 3 条自动贡献至公有领域的内容，默认禁止 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 以任何形式使用，并禁止其以任何方式主张著作权，各地区的法院应在审理案件时对其的著作权主张应不予受理。</li><li>上述第 2 条不被视为阻止 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 在一开始就将文章以使文章不符合“自由文化作品”定义的许可授权使用。</li></ol><h4 id="对于上述第二和第三部分的文章，现有以下授权声明可用："><a href="#对于上述第二和第三部分的文章，现有以下授权声明可用：" class="headerlink" title="对于上述第二和第三部分的文章，现有以下授权声明可用："></a>对于上述第二和第三部分的文章，现有以下授权声明可用：</h4><p>本文的授权使用依据原作者所选择使用的许可协议执行。</p><p>对于使用 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 授权的文章，对 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 的额外要求如下：</p><ol><li>不得阻止任何使用者依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 行使他们对本文章所天然享有的权利。</li><li>不得将已依据 <a href="https://creativecommons.org/licenses/by-sa/4.0/">知识共享许可协议：署名-相同方式共享 4.0 国际</a> 授权的文章更改为任何会使文章不符合“自由文化作品”定义的任何许可。</li><li>如果 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 违反了上述规定，则其立即失去对原文章的所有权利，任何人都应在发现 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 违规行为的 15 天内通知本文的原作者以撤销 <a href="https://rinlin-nya.github.io/about/">铃萤-RinLin</a> 的使用权利并公示之。</li></ol><h3 id="第三节：撤销授权公示"><a href="#第三节：撤销授权公示" class="headerlink" title="第三节：撤销授权公示"></a>第三节：撤销授权公示</h3><p>目前没有因违反上述授权声明而被撤销授权的任何案例。</p>]]></content>
    
  </entry>
  
  
  
</search>
